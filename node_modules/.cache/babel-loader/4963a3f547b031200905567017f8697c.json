{"ast":null,"code":"import { easeBounceOut } from \"d3-ease\";\nimport { interpolateString } from \"d3-interpolate\";\n\nfunction startAnimationLoop({\n  onProgress,\n  onComplete,\n  duration,\n  initialProgress\n}) {\n  let start = null;\n  let requestId = null;\n  const startTimeDiff = (initialProgress || 0) * duration;\n\n  const step = timestamp => {\n    if (!start) start = timestamp - startTimeDiff;\n    let progress = (timestamp - start) / duration;\n\n    if (progress > 1) {\n      progress = 1;\n    }\n\n    onProgress(progress);\n\n    if (progress < 1) {\n      requestId = window.requestAnimationFrame(step);\n    } else {\n      if (onComplete) {\n        onComplete();\n      }\n    }\n  };\n\n  requestId = window.requestAnimationFrame(step);\n  return {\n    stop() {\n      cancelAnimationFrame(requestId);\n    }\n\n  };\n}\n\nfunction getStyles(element, props) {\n  const computed = window.getComputedStyle(element);\n  return props.reduce((obj, prop) => {\n    obj[prop] = computed[prop];\n    return obj;\n  }, {});\n}\n/* custom animations */\n\n\nfunction slide(element, {\n  duration,\n  direction,\n  onComplete\n}) {\n  const collapsedStyles = {\n    marginTop: \"0px\",\n    marginBottom: \"0px\",\n    height: \"0px\"\n  };\n  const props = Object.keys(collapsedStyles);\n  const [startStyles, targetStyles] = direction === \"DOWN\" ? [collapsedStyles, getStyles(element, props)] : [getStyles(element, props), collapsedStyles];\n  const interpolators = new Map(props.map(prop => [prop, interpolateString(startStyles[prop], targetStyles[prop])]));\n  return startAnimationLoop({\n    duration,\n    onComplete,\n    onProgress: progress => {\n      const delta = easeBounceOut(progress);\n      interpolators.forEach((interpolator, prop) => {\n        element.style[prop] = interpolator(delta);\n      });\n    }\n  });\n}\n\nfunction slideDown(element, {\n  duration = 750,\n  onComplete\n} = {}) {\n  return slide(element, {\n    direction: \"DOWN\",\n    duration,\n    onComplete\n  });\n}\n\nfunction slideUp(element, {\n  duration = 750,\n  onComplete\n} = {}) {\n  return slide(element, {\n    direction: \"UP\",\n    duration,\n    onComplete\n  });\n}\n\nexport { startAnimationLoop, slide, slideDown, slideUp };","map":{"version":3,"sources":["/home/rishabh/IIITB/SEMII/SPE/Project/project-frontend/tripshare/src/components/Anime.js"],"names":["easeBounceOut","interpolateString","startAnimationLoop","onProgress","onComplete","duration","initialProgress","start","requestId","startTimeDiff","step","timestamp","progress","window","requestAnimationFrame","stop","cancelAnimationFrame","getStyles","element","props","computed","getComputedStyle","reduce","obj","prop","slide","direction","collapsedStyles","marginTop","marginBottom","height","Object","keys","startStyles","targetStyles","interpolators","Map","map","delta","forEach","interpolator","style","slideDown","slideUp"],"mappings":"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","sourcesContent":["import { easeBounceOut } from \"d3-ease\";\nimport { interpolateString } from \"d3-interpolate\";\n\nfunction startAnimationLoop({\n  onProgress,\n  onComplete,\n  duration,\n  initialProgress,\n}) {\n  let start = null;\n  let requestId = null;\n\n  const startTimeDiff = (initialProgress || 0) * duration;\n\n  const step = (timestamp) => {\n    if (!start) start = timestamp - startTimeDiff;\n    let progress = (timestamp - start) / duration;\n    if (progress > 1) {\n      progress = 1;\n    }\n    onProgress(progress);\n\n    if (progress < 1) {\n      requestId = window.requestAnimationFrame(step);\n    } else {\n      if (onComplete) {\n        onComplete();\n      }\n    }\n  };\n  requestId = window.requestAnimationFrame(step);\n\n  return {\n    stop() {\n      cancelAnimationFrame(requestId);\n    },\n  };\n}\n\nfunction getStyles(element, props) {\n  const computed = window.getComputedStyle(element);\n  return props.reduce((obj, prop) => {\n    obj[prop] = computed[prop];\n    return obj;\n  }, {});\n}\n\n/* custom animations */\nfunction slide(element, { duration, direction, onComplete }) {\n  const collapsedStyles = {\n    marginTop: \"0px\",\n    marginBottom: \"0px\",\n    height: \"0px\",\n  };\n  const props = Object.keys(collapsedStyles);\n\n  const [startStyles, targetStyles] =\n    direction === \"DOWN\"\n      ? [collapsedStyles, getStyles(element, props)]\n      : [getStyles(element, props), collapsedStyles];\n  const interpolators = new Map(\n    props.map((prop) => [\n      prop,\n      interpolateString(startStyles[prop], targetStyles[prop]),\n    ])\n  );\n\n  return startAnimationLoop({\n    duration,\n    onComplete,\n    onProgress: (progress) => {\n      const delta = easeBounceOut(progress);\n      interpolators.forEach((interpolator, prop) => {\n        element.style[prop] = interpolator(delta);\n      });\n    },\n  });\n}\n\nfunction slideDown(element, { duration = 750, onComplete } = {}) {\n  return slide(element, { direction: \"DOWN\", duration, onComplete });\n}\n\nfunction slideUp(element, { duration = 750, onComplete } = {}) {\n  return slide(element, { direction: \"UP\", duration, onComplete });\n}\n\nexport { startAnimationLoop, slide, slideDown, slideUp };\n"]},"metadata":{},"sourceType":"module"}
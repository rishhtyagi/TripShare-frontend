{"ast":null,"code":"var _jsxFileName = \"/home/nayanchaturvedi/Documents/tripshare/src/components/User/Register.js\";\nimport React, { Component } from \"react\";\nimport { saveUser } from \"../../services/index\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, Card, Form, InputGroup, FormControl, Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope, faLock, faUndo, faUserPlus, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      password: \"\"\n    };\n\n    this.userChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.resetRegisterForm = () => {\n      this.setState(() => this.initialState);\n    };\n\n    this.submitUser = event => {\n      event.preventDefault();\n      const user = {\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.saveUser(user);\n      setTimeout(() => {\n        if (this.props.userObject.user != null) {\n          this.setState({\n            show: true,\n            method: \"post\"\n          });\n          setTimeout(() => this.setState({\n            show: false\n          }), 3000);\n        } else {\n          this.setState({\n            show: false\n          });\n        }\n      }, 2000);\n      this.setState(this.initialState);\n    };\n\n    this.state = this.initialState;\n    this.submitUser = this.submitUser.bind(this);\n    this.userChange = this.userChange.bind(this);\n  }\n\n  render() {\n    const {\n      firstname,\n      email,\n      password,\n      lastname\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 5,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"border border-dark bg-dark text-white\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faUserPlus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), \" Register\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                    children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        icon: faUser\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 87,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    autoComplete: \"off\",\n                    type: \"text\",\n                    name: \"firstname\",\n                    value: firstname,\n                    onChange: this.userChange,\n                    className: \"bg-dark text-white\",\n                    placeholder: \"Enter First Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                    children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        icon: faUser\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 107,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    autoComplete: \"off\",\n                    type: \"text\",\n                    name: \"lastname\",\n                    value: lastname,\n                    onChange: this.userChange,\n                    className: \"bg-dark text-white\",\n                    placeholder: \"Enter Last Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                    children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        icon: faEnvelope\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 127,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    required: true,\n                    autoComplete: \"off\",\n                    type: \"text\",\n                    name: \"email\",\n                    value: email,\n                    onChange: this.userChange,\n                    className: \"bg-dark text-white\",\n                    placeholder: \"Enter Email Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                    children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        icon: faLock\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 148,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    required: true,\n                    autoComplete: \"off\",\n                    type: \"password\",\n                    name: \"password\",\n                    value: password,\n                    onChange: this.userChange,\n                    className: \"bg-dark text-white\",\n                    placeholder: \"Enter Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            style: {\n              textAlign: \"right\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              type: \"button\",\n              variant: \"success\",\n              onClick: this.submitUser,\n              disabled: this.state.email.length === 0 || this.state.password.length === 0,\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faUserPlus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this), \" Register\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              type: \"button\",\n              variant: \"info\",\n              onClick: this.resetRegisterForm,\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faUndo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this), \" Reset\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userObject: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveUser: user => dispatch(saveUser(user))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);","map":{"version":3,"sources":["/home/nayanchaturvedi/Documents/tripshare/src/components/User/Register.js"],"names":["React","Component","saveUser","connect","Row","Col","Card","Form","InputGroup","FormControl","Button","FontAwesomeIcon","faEnvelope","faLock","faUndo","faUserPlus","faUser","Register","constructor","props","initialState","firstname","lastname","email","password","userChange","event","setState","target","name","value","resetRegisterForm","submitUser","preventDefault","user","state","setTimeout","userObject","show","method","bind","render","textAlign","length","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { saveUser } from \"../../services/index\";\nimport { connect } from \"react-redux\";\n\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  InputGroup,\n  FormControl,\n  Button,\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faEnvelope,\n  faLock,\n  faUndo,\n  faUserPlus,\n  faUser,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.initialState;\n\n    this.submitUser = this.submitUser.bind(this);\n    this.userChange = this.userChange.bind(this);\n  }\n\n  initialState = {\n    firstname: \"\",\n    lastname: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  userChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  resetRegisterForm = () => {\n    this.setState(() => this.initialState);\n  };\n\n  submitUser = (event) => {\n    event.preventDefault();\n\n    const user = {\n      firstname: this.state.firstname,\n      lastname: this.state.lastname,\n      email: this.state.email,\n      password: this.state.password,\n    };\n\n    this.props.saveUser(user);\n    setTimeout(() => {\n      if (this.props.userObject.user != null) {\n        this.setState({ show: true, method: \"post\" });\n        setTimeout(() => this.setState({ show: false }), 3000);\n      } else {\n        this.setState({ show: false });\n      }\n    }, 2000);\n    this.setState(this.initialState);\n  };\n\n  render() {\n    const { firstname, email, password, lastname } = this.state;\n\n    return (\n      <Row className=\"justify-content-md-center\">\n        <Col xs={5}>\n          <Card className={\"border border-dark bg-dark text-white\"}>\n            <Card.Header>\n              <FontAwesomeIcon icon={faUserPlus} /> Register\n            </Card.Header>\n            <Card.Body>\n              <Form.Row>\n                <Form.Group as={Col}>\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faUser} />\n                      </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                      autoComplete=\"off\"\n                      type=\"text\"\n                      name=\"firstname\"\n                      value={firstname}\n                      onChange={this.userChange}\n                      className={\"bg-dark text-white\"}\n                      placeholder=\"Enter First Name\"\n                    />\n                  </InputGroup>\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group as={Col}>\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faUser} />\n                      </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                      autoComplete=\"off\"\n                      type=\"text\"\n                      name=\"lastname\"\n                      value={lastname}\n                      onChange={this.userChange}\n                      className={\"bg-dark text-white\"}\n                      placeholder=\"Enter Last Name\"\n                    />\n                  </InputGroup>\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group as={Col}>\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faEnvelope} />\n                      </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                      required\n                      autoComplete=\"off\"\n                      type=\"text\"\n                      name=\"email\"\n                      value={email}\n                      onChange={this.userChange}\n                      className={\"bg-dark text-white\"}\n                      placeholder=\"Enter Email Address\"\n                    />\n                  </InputGroup>\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group as={Col}>\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faLock} />\n                      </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                      required\n                      autoComplete=\"off\"\n                      type=\"password\"\n                      name=\"password\"\n                      value={password}\n                      onChange={this.userChange}\n                      className={\"bg-dark text-white\"}\n                      placeholder=\"Enter Password\"\n                    />\n                  </InputGroup>\n                </Form.Group>\n              </Form.Row>\n            </Card.Body>\n            <Card.Footer style={{ textAlign: \"right\" }}>\n              <Button\n                size=\"sm\"\n                type=\"button\"\n                variant=\"success\"\n                onClick={this.submitUser}\n                disabled={\n                  this.state.email.length === 0 ||\n                  this.state.password.length === 0\n                }\n              >\n                <FontAwesomeIcon icon={faUserPlus} /> Register\n              </Button>{\" \"}\n              <Button\n                size=\"sm\"\n                type=\"button\"\n                variant=\"info\"\n                onClick={this.resetRegisterForm}\n              >\n                <FontAwesomeIcon icon={faUndo} /> Reset\n              </Button>\n            </Card.Footer>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userObject: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    saveUser: (user) => dispatch(saveUser(user)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n"]},"metadata":{},"sourceType":"module"}
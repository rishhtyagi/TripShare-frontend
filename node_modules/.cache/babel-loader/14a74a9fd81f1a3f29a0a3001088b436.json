{"ast":null,"code":"import*as AT from\"./authTypes\";import axios from\"axios\";export var authenticateUser=function authenticateUser(email,password){var credentials={email:email,password:password};console.log(email);console.log(password);return function(dispatch){dispatch({type:AT.LOGIN_REQUEST});axios.post(\"http://localhost:8085/user/authenticate\",credentials).then(function(response){console.log(JSON.stringify(response));var token=response.data.token;localStorage.setItem(\"jwtToken\",token);dispatch(success(true));}).catch(function(error){dispatch(failure());});};};export var logoutUser=function logoutUser(){return function(dispatch){dispatch({type:AT.LOGOUT_REQUEST});localStorage.removeItem(\"jwtToken\");localStorage.removeItem(\"newtripId\");dispatch(success(false));};};var success=function success(isLoggedIn){return{type:AT.SUCCESS,payload:isLoggedIn};};var failure=function failure(){return{type:AT.FAILURE,payload:false};};","map":{"version":3,"sources":["/home/rishabh/IIITB/SEMII/SPE/Project/project-frontend/tripshare/src/services/auth/authActions.js"],"names":["AT","axios","authenticateUser","email","password","credentials","console","log","dispatch","type","LOGIN_REQUEST","post","then","response","JSON","stringify","token","data","localStorage","setItem","success","catch","error","failure","logoutUser","LOGOUT_REQUEST","removeItem","isLoggedIn","SUCCESS","payload","FAILURE"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,EAAZ,KAAoB,aAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAQC,QAAR,CAAqB,CACnD,GAAMC,CAAAA,WAAW,CAAG,CAClBF,KAAK,CAAEA,KADW,CAElBC,QAAQ,CAAEA,QAFQ,CAApB,CAIAE,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EACAG,OAAO,CAACC,GAAR,CAAYH,QAAZ,EACA,MAAO,UAACI,QAAD,CAAc,CACnBA,QAAQ,CAAC,CACPC,IAAI,CAAET,EAAE,CAACU,aADF,CAAD,CAAR,CAGAT,KAAK,CACFU,IADH,CACQ,yCADR,CACmDN,WADnD,EAEGO,IAFH,CAEQ,SAACC,QAAD,CAAc,CAClBP,OAAO,CAACC,GAAR,CAAYO,IAAI,CAACC,SAAL,CAAeF,QAAf,CAAZ,EACA,GAAIG,CAAAA,KAAK,CAAGH,QAAQ,CAACI,IAAT,CAAcD,KAA1B,CACAE,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiCH,KAAjC,EACAR,QAAQ,CAACY,OAAO,CAAC,IAAD,CAAR,CAAR,CACD,CAPH,EAQGC,KARH,CAQS,SAACC,KAAD,CAAW,CAChBd,QAAQ,CAACe,OAAO,EAAR,CAAR,CACD,CAVH,EAWD,CAfD,CAgBD,CAvBM,CAyBP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAC9B,MAAO,UAAChB,QAAD,CAAc,CACnBA,QAAQ,CAAC,CACPC,IAAI,CAAET,EAAE,CAACyB,cADF,CAAD,CAAR,CAGAP,YAAY,CAACQ,UAAb,CAAwB,UAAxB,EACAR,YAAY,CAACQ,UAAb,CAAwB,WAAxB,EACAlB,QAAQ,CAACY,OAAO,CAAC,KAAD,CAAR,CAAR,CACD,CAPD,CAQD,CATM,CAWP,GAAMA,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACO,UAAD,CAAgB,CAC9B,MAAO,CACLlB,IAAI,CAAET,EAAE,CAAC4B,OADJ,CAELC,OAAO,CAAEF,UAFJ,CAAP,CAID,CALD,CAOA,GAAMJ,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,MAAO,CACLd,IAAI,CAAET,EAAE,CAAC8B,OADJ,CAELD,OAAO,CAAE,KAFJ,CAAP,CAID,CALD","sourcesContent":["import * as AT from \"./authTypes\";\nimport axios from \"axios\";\n\nexport const authenticateUser = (email, password) => {\n  const credentials = {\n    email: email,\n    password: password,\n  };\n  console.log(email);\n  console.log(password);\n  return (dispatch) => {\n    dispatch({\n      type: AT.LOGIN_REQUEST,\n    });\n    axios\n      .post(\"http://localhost:8085/user/authenticate\", credentials)\n      .then((response) => {\n        console.log(JSON.stringify(response));\n        let token = response.data.token;\n        localStorage.setItem(\"jwtToken\", token);\n        dispatch(success(true));\n      })\n      .catch((error) => {\n        dispatch(failure());\n      });\n  };\n};\n\nexport const logoutUser = () => {\n  return (dispatch) => {\n    dispatch({\n      type: AT.LOGOUT_REQUEST,\n    });\n    localStorage.removeItem(\"jwtToken\");\n    localStorage.removeItem(\"newtripId\");\n    dispatch(success(false));\n  };\n};\n\nconst success = (isLoggedIn) => {\n  return {\n    type: AT.SUCCESS,\n    payload: isLoggedIn,\n  };\n};\n\nconst failure = () => {\n  return {\n    type: AT.FAILURE,\n    payload: false,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}
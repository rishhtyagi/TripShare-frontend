{"ast":null,"code":"var _jsxFileName = \"/home/nayanchaturvedi/Documents/tripshare-master/src/components/User/Login.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, Card, Form, InputGroup, FormControl, Button, Alert } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignInAlt, faEnvelope, faLock, faUndo } from \"@fortawesome/free-solid-svg-icons\";\nimport { authenticateUser } from \"../../services/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      email: \"\",\n      password: \"\",\n      error: \"\"\n    };\n\n    this.credentialChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.findUserById = email => {\n      this.props.fetchUser(email);\n      setTimeout(() => {\n        let user = this.props.userObject.user;\n\n        if (user != null) {\n          this.setState({\n            email: user.email,\n            firstname: user.firstname,\n            lastname: user.lastname\n          });\n        }\n      }, 1000);\n    };\n\n    this.validateUser = email => {\n      this.props.authenticateUser(this.state.email, this.state.password);\n      setTimeout(() => {\n        if (this.props.auth.isLoggedIn) {\n          this.findUserById(email);\n          return this.props.history.push(\"/dashboard:email\");\n        } else {\n          this.resetLoginForm();\n          this.setState({\n            error: \"Invalid email and password\"\n          });\n        }\n      }, 500);\n    };\n\n    this.resetLoginForm = () => {\n      this.setState(() => this.initialState);\n    };\n\n    this.state = this.initialState;\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      error\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 5,\n        children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"border border-dark bg-dark text-white\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSignInAlt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), \" Login\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                    children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        icon: faEnvelope\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 88,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    required: true,\n                    autoComplete: \"off\",\n                    type: \"text\",\n                    name: \"email\",\n                    value: email,\n                    onChange: this.credentialChange,\n                    className: \"bg-dark text-white\",\n                    placeholder: \"Enter Email Address\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(InputGroup.Prepend, {\n                    children: /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        icon: faLock\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 109,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    required: true,\n                    autoComplete: \"off\",\n                    type: \"password\",\n                    name: \"password\",\n                    value: password,\n                    onChange: this.credentialChange,\n                    className: \"bg-dark text-white\",\n                    placeholder: \"Enter Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            style: {\n              textAlign: \"right\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              type: \"button\",\n              variant: \"success\",\n              onClick: this.validateUser(email),\n              disabled: this.state.email.length === 0 || this.state.password.length === 0,\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faSignInAlt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this), \" Login\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              type: \"button\",\n              variant: \"info\",\n              onClick: this.resetLoginForm,\n              disabled: this.state.email.length === 0 && this.state.password.length === 0 && this.state.error.length === 0,\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faUndo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this), \" Reset\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    authenticateUser: (email, password) => dispatch(authenticateUser(email, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/nayanchaturvedi/Documents/tripshare-master/src/components/User/Login.js"],"names":["React","Component","connect","Row","Col","Card","Form","InputGroup","FormControl","Button","Alert","FontAwesomeIcon","faSignInAlt","faEnvelope","faLock","faUndo","authenticateUser","Login","constructor","props","initialState","email","password","error","credentialChange","event","setState","target","name","value","findUserById","fetchUser","setTimeout","user","userObject","firstname","lastname","validateUser","state","auth","isLoggedIn","history","push","resetLoginForm","render","textAlign","length","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,GADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,IAJF,EAKEC,UALF,EAMEC,WANF,EAOEC,MAPF,EAQEC,KARF,QASO,iBATP;AAUA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SACEC,WADF,EAEEC,UAFF,EAGEC,MAHF,EAIEC,MAJF,QAKO,mCALP;AAMA,SAASC,gBAAT,QAAiC,sBAAjC;;;AAEA,MAAMC,KAAN,SAAoBhB,SAApB,CAA8B;AAC5BiB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAKnBC,YALmB,GAKJ;AACbC,MAAAA,KAAK,EAAE,EADM;AAEbC,MAAAA,QAAQ,EAAE,EAFG;AAGbC,MAAAA,KAAK,EAAE;AAHM,KALI;;AAAA,SAWnBC,gBAXmB,GAWCC,KAAD,IAAW;AAC5B,WAAKC,QAAL,CAAc;AACZ,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AADtB,OAAd;AAGD,KAfkB;;AAAA,SAiBnBC,YAjBmB,GAiBHT,KAAD,IAAW;AACxB,WAAKF,KAAL,CAAWY,SAAX,CAAqBV,KAArB;AACAW,MAAAA,UAAU,CAAC,MAAM;AACf,YAAIC,IAAI,GAAG,KAAKd,KAAL,CAAWe,UAAX,CAAsBD,IAAjC;;AACA,YAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB,eAAKP,QAAL,CAAc;AACZL,YAAAA,KAAK,EAAEY,IAAI,CAACZ,KADA;AAEZc,YAAAA,SAAS,EAAEF,IAAI,CAACE,SAFJ;AAGZC,YAAAA,QAAQ,EAAEH,IAAI,CAACG;AAHH,WAAd;AAKD;AACF,OATS,EASP,IATO,CAAV;AAUD,KA7BkB;;AAAA,SA+BnBC,YA/BmB,GA+BHhB,KAAD,IAAW;AACxB,WAAKF,KAAL,CAAWH,gBAAX,CAA4B,KAAKsB,KAAL,CAAWjB,KAAvC,EAA8C,KAAKiB,KAAL,CAAWhB,QAAzD;AACAU,MAAAA,UAAU,CAAC,MAAM;AACf,YAAI,KAAKb,KAAL,CAAWoB,IAAX,CAAgBC,UAApB,EAAgC;AAC9B,eAAKV,YAAL,CAAkBT,KAAlB;AACA,iBAAO,KAAKF,KAAL,CAAWsB,OAAX,CAAmBC,IAAnB,CAAwB,kBAAxB,CAAP;AACD,SAHD,MAGO;AACL,eAAKC,cAAL;AACA,eAAKjB,QAAL,CAAc;AAAEH,YAAAA,KAAK,EAAE;AAAT,WAAd;AACD;AACF,OARS,EAQP,GARO,CAAV;AASD,KA1CkB;;AAAA,SA4CnBoB,cA5CmB,GA4CF,MAAM;AACrB,WAAKjB,QAAL,CAAc,MAAM,KAAKN,YAAzB;AACD,KA9CkB;;AAEjB,SAAKkB,KAAL,GAAa,KAAKlB,YAAlB;AACD;;AA6CDwB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEvB,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKe,KAAxC;AAEA,wBACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,mBACGf,KAAK,iBAAI,QAAC,KAAD;AAAO,UAAA,OAAO,EAAC,QAAf;AAAA,oBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADZ,eAEE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAE,uCAAjB;AAAA,kCACE,QAAC,IAAD,CAAM,MAAN;AAAA,oCACE,QAAC,eAAD;AAAiB,cAAA,IAAI,EAAEX;AAAvB;AAAA;AAAA;AAAA;AAAA,oBADF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,IAAD,CAAM,IAAN;AAAA,oCACE,QAAC,IAAD,CAAM,GAAN;AAAA,qCACE,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,EAAE,EAAER,GAAhB;AAAA,uCACE,QAAC,UAAD;AAAA,0CACE,QAAC,UAAD,CAAY,OAAZ;AAAA,2CACE,QAAC,UAAD,CAAY,IAAZ;AAAA,6CACE,QAAC,eAAD;AAAiB,wBAAA,IAAI,EAAES;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF,eAME,QAAC,WAAD;AACE,oBAAA,QAAQ,MADV;AAEE,oBAAA,YAAY,EAAC,KAFf;AAGE,oBAAA,IAAI,EAAC,MAHP;AAIE,oBAAA,IAAI,EAAC,OAJP;AAKE,oBAAA,KAAK,EAAEQ,KALT;AAME,oBAAA,QAAQ,EAAE,KAAKG,gBANjB;AAOE,oBAAA,SAAS,EAAE,oBAPb;AAQE,oBAAA,WAAW,EAAC;AARd;AAAA;AAAA;AAAA;AAAA,0BANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAsBE,QAAC,IAAD,CAAM,GAAN;AAAA,qCACE,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,EAAE,EAAEpB,GAAhB;AAAA,uCACE,QAAC,UAAD;AAAA,0CACE,QAAC,UAAD,CAAY,OAAZ;AAAA,2CACE,QAAC,UAAD,CAAY,IAAZ;AAAA,6CACE,QAAC,eAAD;AAAiB,wBAAA,IAAI,EAAEU;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADF,eAME,QAAC,WAAD;AACE,oBAAA,QAAQ,MADV;AAEE,oBAAA,YAAY,EAAC,KAFf;AAGE,oBAAA,IAAI,EAAC,UAHP;AAIE,oBAAA,IAAI,EAAC,UAJP;AAKE,oBAAA,KAAK,EAAEQ,QALT;AAME,oBAAA,QAAQ,EAAE,KAAKE,gBANjB;AAOE,oBAAA,SAAS,EAAE,oBAPb;AAQE,oBAAA,WAAW,EAAC;AARd;AAAA;AAAA;AAAA;AAAA,0BANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAgDE,QAAC,IAAD,CAAM,MAAN;AAAa,YAAA,KAAK,EAAE;AAAEqB,cAAAA,SAAS,EAAE;AAAb,aAApB;AAAA,oCACE,QAAC,MAAD;AACE,cAAA,IAAI,EAAC,IADP;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,OAAO,EAAC,SAHV;AAIE,cAAA,OAAO,EAAE,KAAKR,YAAL,CAAkBhB,KAAlB,CAJX;AAKE,cAAA,QAAQ,EACN,KAAKiB,KAAL,CAAWjB,KAAX,CAAiByB,MAAjB,KAA4B,CAA5B,IACA,KAAKR,KAAL,CAAWhB,QAAX,CAAoBwB,MAApB,KAA+B,CAPnC;AAAA,sCAUE,QAAC,eAAD;AAAiB,gBAAA,IAAI,EAAElC;AAAvB;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAYY,GAZZ,eAaE,QAAC,MAAD;AACE,cAAA,IAAI,EAAC,IADP;AAEE,cAAA,IAAI,EAAC,QAFP;AAGE,cAAA,OAAO,EAAC,MAHV;AAIE,cAAA,OAAO,EAAE,KAAK+B,cAJhB;AAKE,cAAA,QAAQ,EACN,KAAKL,KAAL,CAAWjB,KAAX,CAAiByB,MAAjB,KAA4B,CAA5B,IACA,KAAKR,KAAL,CAAWhB,QAAX,CAAoBwB,MAApB,KAA+B,CAD/B,IAEA,KAAKR,KAAL,CAAWf,KAAX,CAAiBuB,MAAjB,KAA4B,CARhC;AAAA,sCAWE,QAAC,eAAD;AAAiB,gBAAA,IAAI,EAAE/B;AAAvB;AAAA;AAAA;AAAA;AAAA,sBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhDF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAmFD;;AAvI2B;;AA0I9B,MAAMgC,eAAe,GAAIT,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAED,KAAK,CAACC;AADP,GAAP;AAGD,CAJD;;AAMA,MAAMS,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLjC,IAAAA,gBAAgB,EAAE,CAACK,KAAD,EAAQC,QAAR,KAChB2B,QAAQ,CAACjC,gBAAgB,CAACK,KAAD,EAAQC,QAAR,CAAjB;AAFL,GAAP;AAID,CALD;;AAOA,eAAepB,OAAO,CAAC6C,eAAD,EAAkBC,kBAAlB,CAAP,CAA6C/B,KAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  InputGroup,\n  FormControl,\n  Button,\n  Alert,\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSignInAlt,\n  faEnvelope,\n  faLock,\n  faUndo,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { authenticateUser } from \"../../services/index\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.initialState;\n  }\n\n  initialState = {\n    email: \"\",\n    password: \"\",\n    error: \"\",\n  };\n\n  credentialChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  findUserById = (email) => {\n    this.props.fetchUser(email);\n    setTimeout(() => {\n      let user = this.props.userObject.user;\n      if (user != null) {\n        this.setState({\n          email: user.email,\n          firstname: user.firstname,\n          lastname: user.lastname,\n        });\n      }\n    }, 1000);\n  };\n\n  validateUser = (email) => {\n    this.props.authenticateUser(this.state.email, this.state.password);\n    setTimeout(() => {\n      if (this.props.auth.isLoggedIn) {\n        this.findUserById(email);\n        return this.props.history.push(\"/dashboard:email\");\n      } else {\n        this.resetLoginForm();\n        this.setState({ error: \"Invalid email and password\" });\n      }\n    }, 500);\n  };\n\n  resetLoginForm = () => {\n    this.setState(() => this.initialState);\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    return (\n      <Row className=\"justify-content-md-center\">\n        <Col xs={5}>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Card className={\"border border-dark bg-dark text-white\"}>\n            <Card.Header>\n              <FontAwesomeIcon icon={faSignInAlt} /> Login\n            </Card.Header>\n            <Card.Body>\n              <Form.Row>\n                <Form.Group as={Col}>\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faEnvelope} />\n                      </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                      required\n                      autoComplete=\"off\"\n                      type=\"text\"\n                      name=\"email\"\n                      value={email}\n                      onChange={this.credentialChange}\n                      className={\"bg-dark text-white\"}\n                      placeholder=\"Enter Email Address\"\n                    />\n                  </InputGroup>\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group as={Col}>\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faLock} />\n                      </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                      required\n                      autoComplete=\"off\"\n                      type=\"password\"\n                      name=\"password\"\n                      value={password}\n                      onChange={this.credentialChange}\n                      className={\"bg-dark text-white\"}\n                      placeholder=\"Enter Password\"\n                    />\n                  </InputGroup>\n                </Form.Group>\n              </Form.Row>\n            </Card.Body>\n            <Card.Footer style={{ textAlign: \"right\" }}>\n              <Button\n                size=\"sm\"\n                type=\"button\"\n                variant=\"success\"\n                onClick={this.validateUser(email)}\n                disabled={\n                  this.state.email.length === 0 ||\n                  this.state.password.length === 0\n                }\n              >\n                <FontAwesomeIcon icon={faSignInAlt} /> Login\n              </Button>{\" \"}\n              <Button\n                size=\"sm\"\n                type=\"button\"\n                variant=\"info\"\n                onClick={this.resetLoginForm}\n                disabled={\n                  this.state.email.length === 0 &&\n                  this.state.password.length === 0 &&\n                  this.state.error.length === 0\n                }\n              >\n                <FontAwesomeIcon icon={faUndo} /> Reset\n              </Button>\n            </Card.Footer>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    authenticateUser: (email, password) =>\n      dispatch(authenticateUser(email, password)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}
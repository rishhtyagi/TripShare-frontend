{"ast":null,"code":"import _defineProperty from\"/home/rishabh/IIITB/SEMII/SPE/Project/project-frontend/tripshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/rishabh/IIITB/SEMII/SPE/Project/project-frontend/tripshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/rishabh/IIITB/SEMII/SPE/Project/project-frontend/tripshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/rishabh/IIITB/SEMII/SPE/Project/project-frontend/tripshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/rishabh/IIITB/SEMII/SPE/Project/project-frontend/tripshare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{connect}from\"react-redux\";import{Row,Col,Card,Form,InputGroup,FormControl,Button,Alert}from\"react-bootstrap\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faSignInAlt,faEnvelope,faLock,faUndo}from\"@fortawesome/free-solid-svg-icons\";import{authenticateUser as _authenticateUser}from\"../services/auth/index\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=/*#__PURE__*/function(_Component){_inherits(Login,_Component);var _super=_createSuper(Login);function Login(props){var _this;_classCallCheck(this,Login);_this=_super.call(this,props);_this.initialState={email:\"\",password:\"\",error:\"\"};_this.credentialChange=function(event){_this.setState(_defineProperty({},event.target.name,event.target.value));};_this.validateUser=function(){_this.props.authenticateUser(_this.state.email,_this.state.password);setTimeout(function(){if(_this.props.auth.isLoggedIn){return _this.props.history.push(\"/dashboard\");}else{_this.resetLoginForm();localStorage.removeItem(\"jwtToken\");_this.setState({error:\"Invalid email and password\"});}},5000);};_this.resetLoginForm=function(){_this.setState(function(){return _this.initialState;});localStorage.removeItem(\"jwtToken\");localStorage.removeItem(\"newtripId\");};_this.state=_this.initialState;return _this;}_createClass(Login,[{key:\"componentDidMount\",value:function componentDidMount(){delete localStorage.jwtToken;}},{key:\"render\",value:function render(){var _this$state=this.state,email=_this$state.email,password=_this$state.password,error=_this$state.error;return/*#__PURE__*/_jsx(Row,{className:\"justify-content-md-center\",children:/*#__PURE__*/_jsxs(Col,{xs:5,children:[error&&/*#__PURE__*/_jsx(Alert,{variant:\"danger\",children:error}),/*#__PURE__*/_jsxs(Card,{className:\"transparent border-dark bg-dark text-white\",children:[/*#__PURE__*/_jsx(Card.Header,{className:\"mb-3 mt-3\",children:/*#__PURE__*/_jsxs(\"h2\",{children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faSignInAlt}),\" Login\"]})}),/*#__PURE__*/_jsxs(Card.Body,{className:\" mb-3 mt-3\",children:[/*#__PURE__*/_jsx(Form.Row,{children:/*#__PURE__*/_jsx(Form.Group,{as:Col,children:/*#__PURE__*/_jsxs(InputGroup,{className:\"mb-3 \",children:[/*#__PURE__*/_jsx(InputGroup.Prepend,{children:/*#__PURE__*/_jsx(InputGroup.Text,{children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faEnvelope})})}),/*#__PURE__*/_jsx(FormControl,{required:true,autoComplete:\"off\",type:\"text\",name:\"email\",size:\"lg\",value:email,onChange:this.credentialChange,className:\"bg-white text-dark\",placeholder:\"Enter Email Address\"})]})})}),/*#__PURE__*/_jsx(Form.Row,{children:/*#__PURE__*/_jsx(Form.Group,{as:Col,children:/*#__PURE__*/_jsxs(InputGroup,{children:[/*#__PURE__*/_jsx(InputGroup.Prepend,{children:/*#__PURE__*/_jsx(InputGroup.Text,{children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faLock})})}),/*#__PURE__*/_jsx(FormControl,{required:true,autoComplete:\"off\",type:\"password\",name:\"password\",size:\"lg\",value:password,onChange:this.credentialChange,className:\"bg-white text-dark\",placeholder:\"Enter Password\"})]})})})]}),/*#__PURE__*/_jsxs(Card.Footer,{style:{textAlign:\"right\"},children:[/*#__PURE__*/_jsxs(Button,{className:\"mb-1 mt-1\",size:\"md\",type:\"button\",variant:\"success\",onClick:this.validateUser,disabled:this.state.email.length===0||this.state.password.length===0,children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faSignInAlt}),\" Login\"]}),\" \",/*#__PURE__*/_jsxs(Button,{size:\"md\",type:\"button\",variant:\"info\",onClick:this.resetLoginForm,disabled:this.state.email.length===0&&this.state.password.length===0&&this.state.error.length===0,children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faUndo}),\" Reset\"]})]})]})]})});}}]);return Login;}(Component);var mapStateToProps=function mapStateToProps(state){return{auth:state.auth};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{authenticateUser:function authenticateUser(email,password){return dispatch(_authenticateUser(email,password));}};};export default connect(mapStateToProps,mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/rishabh/IIITB/SEMII/SPE/Project/project-frontend/tripshare/src/components/Login.js"],"names":["React","Component","connect","Row","Col","Card","Form","InputGroup","FormControl","Button","Alert","FontAwesomeIcon","faSignInAlt","faEnvelope","faLock","faUndo","authenticateUser","Login","props","initialState","email","password","error","credentialChange","event","setState","target","name","value","validateUser","state","setTimeout","auth","isLoggedIn","history","push","resetLoginForm","localStorage","removeItem","jwtToken","textAlign","length","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  Card,\n  Form,\n  InputGroup,\n  FormControl,\n  Button,\n  Alert,\n} from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSignInAlt,\n  faEnvelope,\n  faLock,\n  faUndo,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { authenticateUser } from \"../services/auth/index\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.initialState;\n  }\n\n  initialState = {\n    email: \"\",\n    password: \"\",\n    error: \"\",\n  };\n\n  componentDidMount() {\n    delete localStorage.jwtToken;\n  }\n\n  credentialChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  validateUser = () => {\n    this.props.authenticateUser(this.state.email, this.state.password);\n    setTimeout(() => {\n      if (this.props.auth.isLoggedIn) {\n        return this.props.history.push(\"/dashboard\");\n      } else {\n        this.resetLoginForm();\n        localStorage.removeItem(\"jwtToken\");\n        this.setState({ error: \"Invalid email and password\" });\n      }\n    }, 5000);\n  };\n\n  resetLoginForm = () => {\n    this.setState(() => this.initialState);\n    localStorage.removeItem(\"jwtToken\");\n    localStorage.removeItem(\"newtripId\");\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    return (\n      <Row className=\"justify-content-md-center\">\n        <Col xs={5}>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Card className={\"transparent border-dark bg-dark text-white\"}>\n            <Card.Header className=\"mb-3 mt-3\">\n              <h2>\n                <FontAwesomeIcon icon={faSignInAlt} /> Login\n              </h2>\n            </Card.Header>\n            <Card.Body className=\" mb-3 mt-3\">\n              <Form.Row>\n                <Form.Group as={Col}>\n                  <InputGroup className=\"mb-3 \">\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faEnvelope} />\n                      </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                      required\n                      autoComplete=\"off\"\n                      type=\"text\"\n                      name=\"email\"\n                      size=\"lg\"\n                      value={email}\n                      onChange={this.credentialChange}\n                      className={\"bg-white text-dark\"}\n                      placeholder=\"Enter Email Address\"\n                    />\n                  </InputGroup>\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group as={Col}>\n                  <InputGroup>\n                    <InputGroup.Prepend>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faLock} />\n                      </InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl\n                      required\n                      autoComplete=\"off\"\n                      type=\"password\"\n                      name=\"password\"\n                      size=\"lg\"\n                      value={password}\n                      onChange={this.credentialChange}\n                      className={\"bg-white text-dark\"}\n                      placeholder=\"Enter Password\"\n                    />\n                  </InputGroup>\n                </Form.Group>\n              </Form.Row>\n            </Card.Body>\n            <Card.Footer style={{ textAlign: \"right\" }}>\n              <Button\n                className=\"mb-1 mt-1\"\n                size=\"md\"\n                type=\"button\"\n                variant=\"success\"\n                onClick={this.validateUser}\n                disabled={\n                  this.state.email.length === 0 ||\n                  this.state.password.length === 0\n                }\n              >\n                <FontAwesomeIcon icon={faSignInAlt} /> Login\n              </Button>{\" \"}\n              <Button\n                size=\"md\"\n                type=\"button\"\n                variant=\"info\"\n                onClick={this.resetLoginForm}\n                disabled={\n                  this.state.email.length === 0 &&\n                  this.state.password.length === 0 &&\n                  this.state.error.length === 0\n                }\n              >\n                <FontAwesomeIcon icon={faUndo} /> Reset\n              </Button>\n            </Card.Footer>\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    authenticateUser: (email, password) =>\n      dispatch(authenticateUser(email, password)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}